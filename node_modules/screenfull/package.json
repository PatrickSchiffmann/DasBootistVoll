{
  "name": "screenfull",
  "version": "1.2.1",
  "description": "Simple wrapper for cross-browser usage of the JavaScript Fullscreen API, which lets you bring the page or any element into fullscreen.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "sindresorhus/screenfull.js"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "dist/screenfull.js",
  "files": [
    "dist/screenfull.js"
  ],
  "keywords": [
    "browser",
    "fullscreen"
  ],
  "devDependencies": {
    "grunt": "^0.4.1",
    "grunt-contrib-concat": "^0.4.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-uglify": "^0.4.0",
    "load-grunt-tasks": "^0.4.0"
  },
  "readme": "# screenfull.js\n\n> Simple wrapper for cross-browser usage of the JavaScript [Fullscreen API](https://developer.mozilla.org/en/DOM/Using_full-screen_mode), which lets you bring the page or any element into fullscreen. Smoothens out the browser implementation differences, so you don't have too.\n\n\n### [Demo](http://sindresorhus.com/screenfull.js)\n\n### [Check out my other projects](https://github.com/sindresorhus?tab=repositories)\n\n\n## Install\n\nOnly 0.7 kB gzipped.\n\nDownload the [production version][min] or the [development version][max].\n\n[min]: https://github.com/sindresorhus/screenfull.js/raw/gh-pages/dist/screenfull.min.js\n[max]: https://github.com/sindresorhus/screenfull.js/raw/gh-pages/dist/screenfull.js\n\n```sh\n$ npm install --save screenfull\n```\n\n```sh\n$ bower install --save screenfull\n```\n\n\n## Why?\n\n### Screenfull\n\n```js\nif (screenfull.enabled) {\n\tscreenfull.request();\n}\n```\n\n### Vanilla JavaScript\n\n```js\ndocument.fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen;\n\nfunction requestFullscreen(element) {\n\tif (element.requestFullscreen) {\n\t\telement.requestFullscreen();\n\t} else if (element.mozRequestFullScreen) {\n\t\telement.mozRequestFullScreen();\n\t} else if (element.webkitRequestFullScreen) {\n\t\telement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n\t}\n}\n\nif (document.fullscreenEnabled) {\n\trequestFullscreen(document.documentElement);\n}\n\n// Actually it's more if you want it to work in Safari, but let's not go there...\n```\n\n\n## Support\n\n[Supported browsers](http://caniuse.com/fullscreen)\n\nSafari 5.1 doesn't support use of the keyboard in fullscreen.\n\n\n## Documentation\n\n\n### Examples\n\n\n#### Fullscreen the page\n\n```js\ndocument.getElementById('button').addEventListener('click', function () {\n\tif (screenfull.enabled) {\n\t\tscreenfull.request();\n\t} else {\n\t\t// Ignore or do something else\n\t}\n});\n```\n\n\n#### Fullscreen an element\n\n```js\nvar elem = document.getElementById('target');\ndocument.getElementById('button').addEventListener('click', function () {\n\tif (screenfull.enabled) {\n\t\tscreenfull.request(elem);\n\t}\n});\n```\n\n\n#### Fullscreen an element with jQuery\n\n```js\nvar target = $('#target')[0]; // Get DOM element from jQuery collection\n$('#button').click(function () {\n\tif (screenfull.enabled) {\n\t\tscreenfull.request(target);\n\t}\n});\n```\n\n\n#### Toggle fullscreen on a image with jQuery\n\n```js\n$('img').click(function () {\n\tif (screenfull.enabled) {\n\t\t// We can use `this` since we want the clicked element\n\t\tscreenfull.toggle(this);\n\t}\n});\n```\n\n\n#### Detect fullscreen change\n\n```js\nif (screenfull.enabled) {\n\tdocument.addEventListener(screenfull.raw.fullscreenchange, function () {\n\t\tconsole.log('Am I fullscreen? ' + (screenfull.isFullscreen ? 'Yes' : 'No'));\n\t});\n}\n```\n\nSee the [demo](http://sindresorhus.com/screenfull.js) for more examples, and view the source.\n\nYou can check for fullscreen support by checking the truthy/falsy value of `screenfull` as done in the example above.\n\n\n### Methods\n\n#### .request()\n\nMake an element fullscreen.\n\nAccepts a DOM element. Default is `<html>`. If called with another element than the currently active, it will switch to that if it's a decendant.\n\nIf your page is inside an `<iframe>` you will need to add a `allowfullscreen` attribute (+ `webkitallowfullscreen` and `mozallowfullscreen`).\n\nKeep in mind that the browser will only enter fullscreen when initiated by user events like click, touch, key.\n\n#### .exit()\n\nBrings you out of fullscreen.\n\n#### .toggle()\n\nRequests fullscreen if not active, otherwise exits.\n\n#### .onchange()\n\n<del>Override this method to get notified about fullscreen changes.</del>\n\nYou should rather use a real event listener:\n\n```js\ndocument.addEventListener(screenfull.raw.fullscreenchange, function () {});\n```\n\n#### .onerror()\n\n<del>Override this method to get notified about fullscreen errors.</del>\n\nYou should rather use a real event listener:\n\n```js\ndocument.addEventListener(screenfull.raw.fullscreenerror, function () {});\n```\n\n\n### Properties\n\n#### .isFullscreen\n\nReturns a boolean whether fullscreen is active.\n\n#### .element\n\nReturns the element currently in fullscreen, otherwise `null`.\n\n#### .enabled\n\nReturns a boolean whether you are allowed to enter fullscreen. If your page is inside an `<iframe>` you will need to add a `allowfullscreen` attribute (+ `webkitallowfullscreen` and `mozallowfullscreen`).\n\n#### .raw\n\nExposes the raw properties (prefixed if needed) used internally: `requestFullscreen`, `exitFullscreen`, `fullscreenElement`, `fullscreenEnabled`, `fullscreenchange`, `fullscreenerror`\n\n```js\n$(document).on(screenfull.raw.fullscreenchange, function () {\n\tconsole.log('Fullscreen change');\n});\n```\n\n\n## Resources\n\n- [Using the Fullscreen API in web browsers](http://hacks.mozilla.org/2012/01/using-the-fullscreen-api-in-web-browsers/)\n- [MDN - Fullscreen API](https://developer.mozilla.org/en/DOM/Using_full-screen_mode)\n- [W3C Fullscreen spec](http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html)\n- [Building an amazing fullscreen mobile experience](http://www.html5rocks.com/en/mobile/fullscreen/)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "screenfull@1.2.1",
  "dist": {
    "shasum": "117612472b5b25308799dc603da5d5d80ba4e00a"
  },
  "_from": "screenfull@",
  "_resolved": "https://registry.npmjs.org/screenfull/-/screenfull-1.2.1.tgz"
}
